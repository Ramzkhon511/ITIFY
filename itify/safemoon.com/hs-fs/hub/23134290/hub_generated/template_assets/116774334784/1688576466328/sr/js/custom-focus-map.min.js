let category=[],focus=[],fstatus=[];const completedIcon="https://23134290.fs1.hubspotusercontent-na1.net/hubfs/23134290/completed.svg",categoryData=[{id:1,name:"Technology",image:"https://23134290.fs1.hubspotusercontent-na1.net/hubfs/23134290/Technology.svg"},{id:2,name:"Content",image:"https://23134290.fs1.hubspotusercontent-na1.net/hubfs/23134290/Content.svg"},{id:3,name:"Media",image:"https://23134290.fs1.hubspotusercontent-na1.net/hubfs/23134290/Media.svg"},{id:4,name:"Event",image:"https://23134290.fs1.hubspotusercontent-na1.net/hubfs/23134290/Event-2.svg"}],focusData=[{id:1,name:"Now",color:"#03D5C0"},{id:2,name:"Near Future",color:"#0186ff"},{id:3,name:"Longer Term",color:"#9004ff"},{id:4,name:"Maybe Someday",color:"#b189a6"}],statusData=[{id:1,name:"Not Started",color:"#aaaaaa"},{id:2,name:"Starting Soon",color:"#ff2574"},{id:3,name:"In Progress",color:"#FF8E25"},{id:4,name:"Nearing Delivery",color:"#C2E55E"},{id:5,name:"Imminent",color:"#74E900"},{id:6,name:"Delivered",color:"#03D5C0"}],filterData=(data,cat,foc,stat)=>data.filter((function(obj){const isExistName=void 0!==obj.values?.[1],isExistInCat=0===cat.length||cat.includes(obj.values[3]?.name),isExistInFoc=0===foc.length||foc.includes(obj.values[4]?.name),isExistInStat=0===stat.length||stat.includes(obj.values[5]?.name);return isExistInCat&&isExistInFoc&&isExistInStat&&isExistName})),filterDataNotDelivered=(data,cat,foc,stat)=>data.filter((function(obj){const isExistInCat=0===cat.length||cat.includes(obj.values[3]?.name),isExistInFoc=0===foc.length||foc.includes(obj.values[4]?.name),isExistInStat=0===stat.length||stat.includes(obj.values[5]?.name),isNotDeliveredStat="Delivered"!==obj.values[5]?.name;return isExistInCat&&isExistInFoc&&isExistInStat&&isNotDeliveredStat})),filterDataDelivered=(data,cat,foc,stat)=>data.filter((function(obj){const isExistInCat=0===cat.length||cat.includes(obj.values[3]?.name),isExistInFoc=0===foc.length||foc.includes(obj.values[4]?.name),isExistInStat=0===stat.length||stat.includes(obj.values[5]?.name),isDeliveredStat="Delivered"===obj.values[5]?.name;return isExistInCat&&isExistInFoc&&isExistInStat&&isDeliveredStat})),fetchData=()=>{$.ajax({url:"https://sfmmigrationprodbe.safemoon.com/user/hubdb",method:"GET",timeout:0}).done((function(response){const data=response.objects,filteredData=filterData(data,category,focus,fstatus);return $(".notDeliveredContent").html(""),$(".deliveredContent").html(""),filteredData.map(((dat,index)=>{const cardImage=dat?.values[9],cardImageHtml=cardImage?`                    \n        <div class="card-image sr-spacer-bottom-25">\n          <img src="${cardImage?.url}" width="${cardImage?.width}" height="${cardImage?.height}" draggable="false">\n        </div>`:"",focusCategory=dat?.values[3]?.name,catImage=categoryData.find((cat=>cat.name===focusCategory))?.image,focusCategoryHtml=focusCategory?`\n        <p class="focus_category">\n          <span><img src="${catImage}" alt="${focusCategory}" loading="lazy">${focusCategory}</span><img class="completed_icon" src="${completedIcon}" alt="${completedIcon}" loading="lazy" height="21px">\n        </p>`:"",updatedDate=new Date(dat.updatedAt).toDateString(),updatedDateHtml=updatedDate?`\n        <p class="focus_updated_date">Updated: ${updatedDate}</p>`:"",focusName=dat?.values[1],focusNameHtml=focusName?`\n        <p class="focus_name">${focusName}</p>`:"",focusProgress=dat?.values[6],focusProgressHtml=focusProgress?`\n      <div class="focus_progress">  \n        <div class="progress">\n          <div class="progress-bar" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width: ${focusProgress}%;"></div>\n        </div>\n        <span class="progress_label">${focusProgress}%</span>\n      </div>`:"",focusFocus=dat?.values[4]?.name,focusColor=focusData.find((foc=>foc.name===focusFocus))?.color,focusFocusHtml=focusFocus?`\n        <p class="focus_focus">\n          <svg version="1.0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" height="10" aria-hidden="true" style="color: ${focusColor};">\n            <g id="Circle5_layer"><path d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z"></path>\n            </g>\n          </svg> \n          ${focusFocus}</p>`:"",focusStatus=dat?.values[5]?.name,statusColor=statusData.find((stat=>stat.name===focusStatus))?.color,focusStatusHtml=focusStatus?`\n        <p class="focus_status">\n          <svg version="1.0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" height="10" aria-hidden="true" style="color: ${statusColor};">\n            <g id="Circle5_layer"><path d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z"></path>\n            </g>\n          </svg> ${focusStatus}</p>`:"",focusDescription=dat?.values[2],focusDescriptionHtml=focusDescription?`\n        <p class="focus_description">${focusDescription}</p>`:"",focusMorelink=dat?.values[7],focusMorelinkHtml=focusMorelink?`\n        <a href="${focusMorelink}" rel="noopener" target="_blank" style="line-height:2;">Learn More &gt;</a>`:"",focusVideoLink=dat?.values[8],focusVideoLinkHtml=focusVideoLink?`\n        <a href="${focusVideoLink}" rel="noopener" target="_blank" style="line-height:2;">Watch Video &gt;</a>`:"";if("Delivered"===focusStatus){let eachContent=`<div class="focus-block card card-1 completed_card">\n          <div class="card-inner">\n            ${cardImageHtml}\n            <div class="text-wrapper">\n              ${focusCategoryHtml}\n              ${updatedDateHtml}\n              ${focusNameHtml}\n              ${focusProgressHtml}\n              <div style="display: flex; column-gap: 25px; flex-wrap: wrap;">\n                ${focusFocusHtml}\n                ${focusStatusHtml}\n              </div>\n              ${focusDescriptionHtml}\n              <div style="display: flex; flex-wrap: wrap; justify-content: space-between;">\n                ${focusMorelinkHtml}\n                ${focusVideoLinkHtml}\n              </div>  \n\n            </div>\n          </div>\n        </div>`;$(".deliveredContent").append(eachContent)}else{let eachContent=`<div class="focus-block card card-1">\n          <div class="card-inner">\n            ${cardImageHtml}\n            <div class="text-wrapper">\n              ${focusCategoryHtml}\n              ${updatedDateHtml}\n              ${focusNameHtml}\n              ${focusProgressHtml}\n              <div style="display: flex; column-gap: 25px; flex-wrap: wrap;">\n                ${focusFocusHtml}\n                ${focusStatusHtml}\n              </div>\n              ${focusDescriptionHtml}\n              <div style="display: flex; flex-wrap: wrap; justify-content: space-between;">\n                ${focusMorelinkHtml}\n                ${focusVideoLinkHtml}\n              </div>  \n\n            </div>\n          </div>\n        </div>`;$(".notDeliveredContent").append(eachContent)}})),!1}))},resetFilter=()=>{category=[],focus=[],fstatus=[],setURLParams(),fetchData(),$(".filter_btn").removeClass("active_btn")},setFilterWithParams=currentUrl=>{const url=new URL(currentUrl),params=new URLSearchParams(url.search),catParams=params.get("cat")?.split(",")||[],focusParams=params.get("focus")?.split(",")||[],statusParams=params.get("status")?.split(",")||[],categoryNames=catParams.map((catId=>{const categoryObj=categoryData.find((cat=>cat.id===parseInt(catId)));return categoryObj?categoryObj.name:""})),focusNames=focusParams.map((focusId=>{const focusObj=focusData.find((foc=>foc.id===parseInt(focusId)));return focusObj?focusObj.name:""})),statusNames=statusParams.map((statusId=>{const statusObj=statusData.find((stat=>stat.id===parseInt(statusId)));return statusObj?statusObj.name:""}));category=categoryNames,focus=focusNames,fstatus=statusNames,$(".category_filter").each((function(){const element=$(this);category.includes(element.text().slice(2))&&element.addClass("active_btn")})),$(".focus_filter").each((function(){const element=$(this);focus.includes(element.text().slice(2))&&element.addClass("active_btn")})),$(".status_filter").each((function(){const element=$(this);fstatus.includes(element.text().slice(2))&&element.addClass("active_btn")})),fetchData()},setURLParams=()=>{const categoryIds=category.map((catName=>{const categoryObj=categoryData.find((cat=>cat.name===catName));return categoryObj?categoryObj.id:""})),focusIds=focus.map((focusName=>{const focusObj=focusData.find((foc=>foc.name===focusName));return focusObj?focusObj.id:""})),statusIds=fstatus.map((statusName=>{const statusObj=statusData.find((stat=>stat.name===statusName));return statusObj?statusObj.id:""})),cat_param=categoryIds.join(","),focus_param=focusIds.join(","),status_param=statusIds.join(",");let newUrl=window.location.href.split("?")[0];const params=[];0!==cat_param.length&&params.push(`cat=${cat_param}`),0!==focus_param.length&&params.push(`focus=${focus_param}`),0!==status_param.length&&params.push(`status=${status_param}`),0!==params.length&&(newUrl+="?"+params.join("&")),history.pushState(null,"",newUrl)};$(document).ready((function(){const currentUrl=window.location.href;currentUrl.includes("?")?setFilterWithParams(currentUrl):resetFilter(),$(".category_filter").click((function(e){$(e.currentTarget).toggleClass("active_btn"),category=[],$(".category_filter").each((function(){const element=$(this);element.hasClass("active_btn")&&category.push(element.text().slice(2))})),setURLParams(),fetchData()})),$(".focus_filter").click((function(e){$(e.currentTarget).toggleClass("active_btn"),focus=[],$(".focus_filter").each((function(){const element=$(this);element.hasClass("active_btn")&&focus.push(element.text().slice(2))})),setURLParams(),fetchData()})),$(".status_filter").click((function(e){$(e.currentTarget).toggleClass("active_btn"),fstatus=[],$(".status_filter").each((function(){const element=$(this);element.hasClass("active_btn")&&fstatus.push(element.text().slice(2))})),setURLParams(),fetchData()})),$("#reset_filter").click((function(){resetFilter()}))}));
//# sourceURL=https://cdn2.hubspot.net/hub/23134290/hub_generated/template_assets/116774334784/1688576466328/sr/js/custom-focus-map.js